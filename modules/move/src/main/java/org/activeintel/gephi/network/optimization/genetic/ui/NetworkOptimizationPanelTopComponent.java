/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.activeintel.gephi.network.optimization.genetic.ui;

import java.awt.Color;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.SwingWorker;
import org.activeintel.gephi.jgrapht.JGraphT2GephiConvertingFilter;
import org.activeintel.gephi.jgrapht.JGraphTUtils;
import org.activeintel.gephi.utilities.GephiUtilities;
import org.activeintel.network.optimization.algorithms.GeneticOptimizer;
import org.activeintel.network.optimization.algorithms.SubGraphEvaluator;
import org.activeintel.network.optimization.algorithms.SubGraphFactory;
import org.gephi.filters.api.FilterController;
import org.gephi.filters.api.Query;
import org.gephi.graph.api.GraphController;
import org.gephi.graph.api.GraphModel;
import org.gephi.graph.api.GraphView;
import org.gephi.graph.api.Node;
//import org.gephi.graph.api.NodeData;
import org.jgrapht.Graph;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;

import org.openide.util.Lookup;
import org.uncommons.maths.random.Probability;
import org.uncommons.watchmaker.framework.EvolutionEngine;
import org.uncommons.watchmaker.framework.EvolutionObserver;
import org.uncommons.watchmaker.framework.FitnessEvaluator;
import org.uncommons.watchmaker.framework.PopulationData;
import org.uncommons.watchmaker.framework.termination.GenerationCount;
import org.uncommons.watchmaker.swing.evolutionmonitor.EvolutionMonitor;

import org.jdesktop.beansbinding.Property;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.activeintel.gephi.network.optimization.genetic.ui//NetworkOptimizationPanel//EN",
autostore = false)
@TopComponent.Description(preferredID = "NetworkOptimizationPanelTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
iconBase = "org/activeintel/gephi/network/optimization/genetic/ui/activeintelligence-logo-small.png",        
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "rankingmode", openAtStartup = true)
@ActionID(category = "Window", id = "org.activeintel.gephi.network.optimization.genetic.ui.NetworkOptimizationPanelTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_NetworkOptimizationPanelAction",
preferredID = "NetworkOptimizationPanelTopComponent")
public final class NetworkOptimizationPanelTopComponent extends TopComponent {
    private NetworkOptimizationTask task;
    
    private static final Logger log = Logger.getLogger(NetworkOptimizationPanelTopComponent.class.getName());        
    

    public NetworkOptimizationPanelTopComponent() {
        log.finest("initializzzing ...");   
        initComponents();
        
        setName(NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "CTL_NetworkOptimizationPanelTopComponent"));
        setToolTipText(NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "HINT_NetworkOptimizationPanelTopComponent"));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        abortControl1 = new org.uncommons.watchmaker.swing.AbortControl();
        abortControl2 = new org.uncommons.watchmaker.swing.AbortControl();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        graphViewPanel = new org.activeintel.gephi.network.optimization.genetic.ui.GraphViewPanel();
        geneticOptimizationSettingsPanel = new javax.swing.JPanel();
        geneticOptimizerPanel = new org.activeintel.network.optimization.algorithms.ui.GeneticOptimizerPanel();
        subGraphMutationPanel = new org.activeintel.network.optimization.algorithms.ui.SubGraphMutationPanel();
        subGraphCrossoverPanel = new org.activeintel.network.optimization.algorithms.ui.SubGraphCrossoverPanel();
        jPanel1 = new javax.swing.JPanel();
        subGraphFactoryPanel = new org.activeintel.network.optimization.algorithms.ui.SubGraphFactoryPanel();
        jPanel2 = new javax.swing.JPanel();
        subGraphEvaluatorPanel = new org.activeintel.network.optimization.algorithms.ui.SubGraphEvaluatorPanel();
        subGraphEvaluationCriteriaPanel = new org.activeintel.network.optimization.algorithms.ui.SubGraphEvaluationCriteriaPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        stopBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        fitnessLbl = new javax.swing.JLabel();
        initBtn = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(491, 700));

        jTabbedPane1.setBackground(null);
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.graphViewPanel.TabConstraints.tabTitle"), graphViewPanel); // NOI18N

        geneticOptimizationSettingsPanel.setBackground(null);
        geneticOptimizationSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.geneticOptimizationSettingsPanel.border.title"))); // NOI18N

        javax.swing.GroupLayout geneticOptimizationSettingsPanelLayout = new javax.swing.GroupLayout(geneticOptimizationSettingsPanel);
        geneticOptimizationSettingsPanel.setLayout(geneticOptimizationSettingsPanelLayout);
        geneticOptimizationSettingsPanelLayout.setHorizontalGroup(
            geneticOptimizationSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geneticOptimizationSettingsPanelLayout.createSequentialGroup()
                .addGroup(geneticOptimizationSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subGraphMutationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subGraphCrossoverPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(geneticOptimizerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        geneticOptimizationSettingsPanelLayout.setVerticalGroup(
            geneticOptimizationSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geneticOptimizationSettingsPanelLayout.createSequentialGroup()
                .addComponent(geneticOptimizerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subGraphMutationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subGraphCrossoverPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.geneticOptimizationSettingsPanel.TabConstraints.tabTitle"), geneticOptimizationSettingsPanel); // NOI18N

        jPanel1.setBackground(null);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.jPanel1.border.title"))); // NOI18N

        jPanel2.setBackground(null);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.jPanel2.border.title"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(subGraphEvaluatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(subGraphEvaluatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(subGraphFactoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(subGraphFactoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N
        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.subGraphEvaluationCriteriaPanel.TabConstraints.tabTitle"), subGraphEvaluationCriteriaPanel); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/activeintel/gephi/network/optimization/genetic/ui/activeintelligence-logo-v2.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.jLabel5.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.jLabel1.text")); // NOI18N

        jPanel3.setBackground(null);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.openide.awt.Mnemonics.setLocalizedText(runButton, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.runButton.text")); // NOI18N
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(stopBtn, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.stopBtn.text")); // NOI18N
        stopBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopBtnActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(resetBtn, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.resetBtn.text")); // NOI18N
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(fitnessLbl, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.fitnessLbl.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(initBtn, org.openide.util.NbBundle.getMessage(NetworkOptimizationPanelTopComponent.class, "NetworkOptimizationPanelTopComponent.initBtn.text")); // NOI18N
        initBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(progressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fitnessLbl))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(runButton)
                        .addGap(1, 1, 1)
                        .addComponent(stopBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(initBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetBtn)))
                .addGap(121, 121, 121))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopBtn)
                    .addComponent(runButton)
                    .addComponent(initBtn)
                    .addComponent(resetBtn))
                .addGap(1, 1, 1)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fitnessLbl))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 318, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        task = new NetworkOptimizationTask(this);
        task.execute(); 
    }//GEN-LAST:event_runButtonActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        // Show main graph
        GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel();        
        graphModel.setVisibleView(graphModel.getGraph().getView());
    }//GEN-LAST:event_resetBtnActionPerformed

    private void stopBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopBtnActionPerformed
        // TODO add your handling code here:
        task.abort();
    }//GEN-LAST:event_stopBtnActionPerformed

    private void initBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initBtnActionPerformed
        task.init();
    }//GEN-LAST:event_initBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.uncommons.watchmaker.swing.AbortControl abortControl1;
    private org.uncommons.watchmaker.swing.AbortControl abortControl2;
    public javax.swing.JLabel fitnessLbl;
    private javax.swing.JPanel geneticOptimizationSettingsPanel;
    public org.activeintel.network.optimization.algorithms.ui.GeneticOptimizerPanel geneticOptimizerPanel;
    public org.activeintel.gephi.network.optimization.genetic.ui.GraphViewPanel graphViewPanel;
    private javax.swing.JButton initBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    protected javax.swing.JProgressBar progressBar;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton runButton;
    private javax.swing.JButton stopBtn;
    public org.activeintel.network.optimization.algorithms.ui.SubGraphCrossoverPanel subGraphCrossoverPanel;
    public org.activeintel.network.optimization.algorithms.ui.SubGraphEvaluationCriteriaPanel subGraphEvaluationCriteriaPanel;
    public org.activeintel.network.optimization.algorithms.ui.SubGraphEvaluatorPanel subGraphEvaluatorPanel;
    public org.activeintel.network.optimization.algorithms.ui.SubGraphFactoryPanel subGraphFactoryPanel;
    public org.activeintel.network.optimization.algorithms.ui.SubGraphMutationPanel subGraphMutationPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        // TODO: Add initialization code
        task = new NetworkOptimizationTask(this);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    
    

    
    
    
    
    
 
    
}
