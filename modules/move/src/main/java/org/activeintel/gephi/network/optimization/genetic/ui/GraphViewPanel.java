/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DisplaySettingsPanel.java
 *
 * Created on Mar 27, 2012, 12:02:09 PM
 */
package org.activeintel.gephi.network.optimization.genetic.ui;

import java.awt.Color;
import javax.swing.JColorChooser;

/**
 *
 * @author neil
 */
public class GraphViewPanel extends javax.swing.JPanel {

    /** Creates new form DisplaySettingsPanel */
    public GraphViewPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        graphView = new org.activeintel.gephi.network.optimization.genetic.ui.GraphView();
        showOnlySubgrahChkBox = new javax.swing.JCheckBox();
        showGraphOptimizationChkBox = new javax.swing.JCheckBox();
        autoLayoutChkBox = new javax.swing.JCheckBox();
        layoutBtn = new javax.swing.JButton();
        sizeChkBox = new javax.swing.JCheckBox();
        sizeBtn = new javax.swing.JButton();
        selectedColorBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        notselectedColorBtn = new javax.swing.JButton();

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, autoLayoutChkBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), graphView, org.jdesktop.beansbinding.BeanProperty.create("autoLayout"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, sizeChkBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), graphView, org.jdesktop.beansbinding.BeanProperty.create("isSize"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, notselectedColorBtn, org.jdesktop.beansbinding.ELProperty.create("${foreground}"), graphView, org.jdesktop.beansbinding.BeanProperty.create("notselectedColor"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, selectedColorBtn, org.jdesktop.beansbinding.ELProperty.create("${foreground}"), graphView, org.jdesktop.beansbinding.BeanProperty.create("selectedColor"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, showGraphOptimizationChkBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), graphView, org.jdesktop.beansbinding.BeanProperty.create("showGraphOptimization"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, showOnlySubgrahChkBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), graphView, org.jdesktop.beansbinding.BeanProperty.create("showOnlySubGraph"));
        bindingGroup.addBinding(binding);

        setBackground(null);

        showOnlySubgrahChkBox.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.showOnlySubgrahChkBox.text")); // NOI18N

        showGraphOptimizationChkBox.setSelected(true);
        showGraphOptimizationChkBox.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.showGraphOptimizationChkBox.text")); // NOI18N
        showGraphOptimizationChkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGraphOptimizationChkBoxActionPerformed(evt);
            }
        });

        autoLayoutChkBox.setSelected(true);
        autoLayoutChkBox.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.autoLayoutChkBox.text")); // NOI18N

        layoutBtn.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.layoutBtn.text")); // NOI18N
        layoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layoutBtnActionPerformed(evt);
            }
        });

        sizeChkBox.setSelected(true);
        sizeChkBox.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.sizeChkBox.text")); // NOI18N

        sizeBtn.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.sizeBtn.text")); // NOI18N
        sizeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeBtnActionPerformed(evt);
            }
        });

        selectedColorBtn.setForeground(new java.awt.Color(255, 0, 0));
        selectedColorBtn.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.selectedColorBtn.text")); // NOI18N
        selectedColorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedColorBtnActionPerformed(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.jLabel1.text")); // NOI18N

        notselectedColorBtn.setForeground(new java.awt.Color(102, 102, 102));
        notselectedColorBtn.setText(org.openide.util.NbBundle.getMessage(GraphViewPanel.class, "GraphViewPanel.notselectedColorBtn.text")); // NOI18N
        notselectedColorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notselectedColorBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(showOnlySubgrahChkBox)
                    .add(showGraphOptimizationChkBox)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(autoLayoutChkBox)
                            .add(sizeChkBox))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(sizeBtn, 0, 0, Short.MAX_VALUE)
                            .add(layoutBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(selectedColorBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(notselectedColorBtn))
                    .add(layout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jLabel1)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(showOnlySubgrahChkBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(showGraphOptimizationChkBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(autoLayoutChkBox)
                    .add(layoutBtn))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sizeChkBox)
                    .add(sizeBtn))
                .add(24, 24, 24)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(selectedColorBtn)
                    .add(notselectedColorBtn))
                .addContainerGap(324, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void showGraphOptimizationChkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGraphOptimizationChkBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showGraphOptimizationChkBoxActionPerformed

    private void layoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layoutBtnActionPerformed
        this.graphView.layout();
    }//GEN-LAST:event_layoutBtnActionPerformed

    private void sizeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeBtnActionPerformed
        // TODO add your handling code here:
        this.graphView.size(true);        
    }//GEN-LAST:event_sizeBtnActionPerformed

    private void selectedColorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedColorBtnActionPerformed
        Color color = JColorChooser.showDialog(this, "Choose Color for Selected Nodes", Color.RED);
        this.selectedColorBtn.setForeground(color);
    }//GEN-LAST:event_selectedColorBtnActionPerformed

    private void notselectedColorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notselectedColorBtnActionPerformed
        Color color = JColorChooser.showDialog(this, "Choose Color for Selected Nodes", Color.GRAY);
        this.notselectedColorBtn.setForeground(color);
    }//GEN-LAST:event_notselectedColorBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoLayoutChkBox;
    public org.activeintel.gephi.network.optimization.genetic.ui.GraphView graphView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton layoutBtn;
    private javax.swing.JButton notselectedColorBtn;
    private javax.swing.JButton selectedColorBtn;
    private javax.swing.JCheckBox showGraphOptimizationChkBox;
    private javax.swing.JCheckBox showOnlySubgrahChkBox;
    private javax.swing.JButton sizeBtn;
    private javax.swing.JCheckBox sizeChkBox;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
